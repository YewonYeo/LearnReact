// 클릭이벤트를 만들어주는 훅
const useClick = (onClick) => {
  if (typeof onClick !== "function") {
    return;
  }
  const element = useRef();
  useEffect(() => {
    // useEffect가 mount, update 될 때 실행
    // 단 dependency를 []로 하면 mount 때만 실행 된다.
    if (element.current) {
      element.current.addEventListener("click", onClick);
    }

    // return 되는 함수는 componentWillUnMount 시 실행된다.
    // componentWillUnMount시 이벤트 제거
    return () => {
      if (element.current) {
        element.current.removeEventListener("click", onClick);
      }
    };
  }, []);

  return element; // reference를 리턴
};

function App() {
  const sayHello = () => console.log("say hello");
  const title = useClick(sayHello);
  return (
    <div className="App">
      <h1 ref={title}>Hi</h1>
    </div>
  );
}

/*
  1. title은 useClick에 의해 h1 객체이다.
  2. h1이 마운트 되면, 클릭 이벤트로 인자로 받은 sayHello 함수를 실행한다.
  3. h1이 마운트되지 않았을 때는 해당 이벤트가 없다.

  useEffect의 return에 작성하는 함수는 componentWillUnMount에서 실행된다.
  
  */
